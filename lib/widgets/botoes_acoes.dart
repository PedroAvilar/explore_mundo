import 'package:explore_mundo/utils/abrir_mapa.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:share_plus/share_plus.dart';
import 'package:url_launcher/url_launcher.dart';

//Widget de bot√£o de a√ß√£o reutiliz√°vel para destinos e contato
Widget buildButtonColumn(
  IconData icon,
  String label,
  String action,
  BuildContext context, {
    String? nome,
    String? telefone,
    String? endereco,
    double? mediaEstrelas,
    String? email,
  }) {
  return Column(
    mainAxisSize: MainAxisSize.min,
    children: <Widget>[
      SizedBox(
        width: 120,
        height: 40,
          child: IconButton(
            iconSize: 30,
            icon: Icon(icon, color: Colors.blue),
            onPressed: () async {

              //A√ß√£o de ligar
              if (action == 'LIGAR') {
                if (kIsWeb) { 
                  //No navegador - caixa de di√°logo
                  showDialog(
                    context: context,
                    builder: (context) => AlertDialog(
                      title: const Text('N√∫mero de telefone'),
                      content: Text(telefone ?? 'N√∫mero n√£o dispon√≠vel'),
                      actions: [
                        TextButton(
                          onPressed: () => Navigator.pop(context),
                          child: const Text('OK'),
                        ),
                      ],
                    ),
                  );
                } else {
                  //Em dispositivos m√≥veis - abre o discador
                  final Uri uri = Uri(scheme: 'tel', path: telefone);
                  if (await canLaunchUrl(uri)) {
                    await launchUrl(uri);
                  } else {
                    ScaffoldMessenger.of(context).showSnackBar(
                      const SnackBar(content: Text('N√£o foi poss√≠vel abrir o discador')),
                    );
                  }
                }

              //A√ß√£o de rota
              } else if (action == 'ROTA') {
                //Caso n√£o tenha rota
                if(endereco ==null || endereco.isEmpty) {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(content: Text('Localiza√ß√£o n√£o dispon√≠vel')),
                  );
                  return;
                }
                //Fun√ß√£o auxiliar
                await abrirMapa(endereco, context);

              //A√ß√£o de compartilhar
              } else if (action == 'COMPARTILHAR') {
                final info = '''
    Confira este destino incr√≠vel no Explore Mundo! üåç

    üìç Destino: ${ nome ?? "Nome n√£o informado"}
    üìå Endere√ßo: ${endereco ?? "N√£o informado"}
    üìû Telefone: ${telefone ?? "N√£o informado"}
    ‚≠ê Avalia√ß√£o m√©dia: ${mediaEstrelas?.toStringAsFixed(1) ?? "Sem avalia√ß√µes"}

    Acesse o app e explore mais!
                ''';
                if (kIsWeb) {
                  //No navegador
                  await Clipboard.setData(ClipboardData(text: info));
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(content: Text('Informa√ß√µes copiadas para a √°rea de transfer√™ncia.')),
                  );
                } else {
                  //Em dispositivos m√≥veis
                  await Share.share(info);
                }

              //A√ß√£o de enviar e-mail
              } else if (action == 'EMAIL') {
                final Uri url = Uri(
                  scheme: 'mailto',
                  path: email ?? 'contato@exploremundo.com',
                  query: 'subject=Contato pelo app Explore Mundo',
                );
                if (await canLaunchUrl(url)) {
                  await launchUrl(url);
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(content: Text('N√£o foi poss√≠vel abrir o aplicativo de e-mail.')),
                  );
                }
              }
            },
          ),
        ),
        const SizedBox(height: 1),
        Text(
          label,
          style: TextStyle(
            color: Colors.blue,
            fontWeight: FontWeight.w500
        ),
      ),
    ],
  );
}